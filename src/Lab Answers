What pieces of code help versus obscure your understanding of the algorithm?
Helps: Print lines that show what data is being printed
Obscure: the entire code is in the main function so it's hard to tell what the sequence and overall functionality of the program is doing

What comments might be helpful within the code?
Steps, different heuristics (i.e. when the code is doing the in-order versus decreasing-order algorithms), describing conditions for if statements

Are there places where the code could be more concise and also more clear?
Yes, the print statements are repetitive, the two heuristics are carried out in the same function when they should be separated

Testability
How would you test this code for bugs?
Run it on different text files and see if it works. Run it on test files with very simple numbers and manually compare
the answer from the program with something done by hand.

Give a specific example of a "test case" as the code is currently written.
The test case is the example.txt file, which is coded into the Bins.java file already.

What additional functions may be helpful?
A consistent print function, a function that reverse orders the list of numbers 

Give a specific example of a "test case" for your new function.
We just use the same data

Extensibility
What Code Smells can you find?
1. "The Bloaters". The entire functinality of "Bins" is contained in the main method of the bins.java file.
 
What suggestions does this code make about how someone would extend it in the future to compare the performance of a wider variety of fitting algorithms?


What dependencies are there between different parts of the code?
Bins depends on Disk as it creates instances of Disk. Several functions depending on data 

How easy to find are those dependencies?
It's not super easy to find.

Can you clarify or remove those dependencies?
Yes, pass data through functions and reuse them to reduce dependencies.

